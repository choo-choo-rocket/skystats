name: docker build

on:
  schedule:
    - cron: "0 5 * * 1"
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
      - "dev"

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Set variables useful for later
      id: useful_vars
      run: |-
        echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
        echo "short_sha=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        echo "iso_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha,prefix=,format=long,event=tag
          type=sha
          type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          type=raw,value=${{ github.ref_name }}-${{ steps.useful_vars.outputs.short_sha }}-${{ steps.useful_vars.outputs.timestamp }},enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        build-args: |
          BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
          VERSION=${{
            startsWith(github.ref, 'refs/tags/v') && github.ref_name ||
            (github.event_name == 'pull_request' && format('pr-{0}-{1}', github.event.pull_request.number, steps.useful_vars.outputs.short_sha)) ||
            format('{0}-{1}', github.ref_name, steps.useful_vars.outputs.short_sha)
          }}
          COMMIT=${{ steps.useful_vars.outputs.short_sha }}
          DATE=${{ steps.useful_vars.outputs.iso_date }}
  release:
        needs: docker
        if: startsWith(github.ref, 'refs/tags/v')
        permissions:
          contents: write
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                fetch-depth: 0
            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                go-version-file: 'go.mod'
            - name: Run GoReleaser
              uses: goreleaser/goreleaser-action@v6
              with:
                distribution: goreleaser
                version: latest
                args: release --clean
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}