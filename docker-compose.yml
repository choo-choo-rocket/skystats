services:
  skystats-api:
    build: .
    container_name: skystats-api
    ports:
      - "8080:8080"
    depends_on:
      - skystats-db-init
    environment:
      # Docker environment flag (used to skip daemonising the app when in Docker)
      - DOCKER_ENV=true
      # ADSB
      - READSB_AIRCRAFT_JSON=${READSB_AIRCRAFT_JSON}
      # PostgreSQL
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      # App
      - API_PORT=8080
      - LAT=${LAT}
      - LON=${LON}
      - RADIUS=${RADIUS}
      - ABOVE_RADIUS=${ABOVE_RADIUS}
      - DOMESTIC_COUNTRY_ISO=${DOMESTIC_COUNTRY_ISO}

  skystats-web:
    image: node:20-alpine
    container_name: skystats-web
    working_dir: /app
    ports:
      - "5173:4173"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DOCKER_ENV=true
    command: sh -c "npm install && npm run build && npm run preview -- --host 0.0.0.0"
    depends_on:
      - skystats-api

  skystats-db-init:
      image: python:3.11-slim
      container_name: skystats-db-init
      depends_on:
        - skystats-db
      environment:
        - DB_HOST=${DB_HOST}
        - DB_PORT=${DB_PORT}
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_NAME=${DB_NAME}
      volumes:
        - ./scripts:/app
      working_dir: /app
      command: >
        bash -c "
          pip install --no-cache-dir pandas python-dotenv sqlalchemy psycopg2-binary &&
          python plane-alert-db.py
        "
      restart: "no"

  skystats-db:
    image: postgres:latest
    container_name: skystats-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

volumes:
  postgres_data: