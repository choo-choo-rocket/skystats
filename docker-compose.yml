services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db-init
    environment:
      # Docker environment flag (used to skip daemonising the app when in Docker)
      - DOCKER_ENV=true
      # ADSB
      - ADSB_HOST=
      - ADSB_PORT=
      # PostgreSQL
      - DB_HOST=skystats-db-docker
      - DB_PORT=
      - DB_USER=
      - DB_PASSWORD=
      - DB_NAME=skystats_db
      # ADSB DB API
      - ADSB_DB_AIRCRAFT_ENDPOINT=https://api.adsbdb.com/v0/aircraft/
      - ADSB_DB_CALLSIGN_ENDPOINT=https://api.adsbdb.com/v0/callsign/
      # App
      - APP_PORT=8080
      - LATITUDE=
      - LONGITUDE=
      - RADIUS=

  db-init:
      image: python:3.11-slim
      depends_on:
        skystats-db-docker:
          condition: service_healthy
      environment:
        - DB_HOST=skystats-db-docker
        - DB_PORT=
        - DB_USER=
        - DB_PASSWORD=
        - DB_NAME=skystats_db
        - PLANE_DB_URL=https://raw.githubusercontent.com/sdr-enthusiasts/plane-alert-db/refs/heads/main/plane-alert-db.csv
        - IMAGE_DB_URL=https://raw.githubusercontent.com/sdr-enthusiasts/plane-alert-db/refs/heads/main/plane_images.csv
      volumes:
        - ./scripts:/app
      working_dir: /app
      command: >
        bash -c "
          pip install --no-cache-dir pandas python-dotenv sqlalchemy psycopg2-binary &&
          python plane-alert-db.py
        "
      restart: "no"
  
  skystats-db-docker:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=
      - POSTGRES_PASSWORD=
      - POSTGRES_DB=skystats_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: